@model CoffeeShop.ViewModel.MakeOrderViewModel
@using CoffeeShop.Models

@{
    Layout = null;
}

@functions {
    private String CreateTransactionIdentifier()
    {
        var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        var stringChars = new char[8];
        var random = new Random();

        for (int i = 0; i < stringChars.Length; i++)
        {
            stringChars[i] = chars[random.Next(chars.Length)];
        }

        var finalString = new String(stringChars);
        return finalString;
    }

    private List<(double original_price, double discounted_price)> CalculateOrderDiscounts()
    {
        double original_price = 0.0;
        double discounted_price = 0.0;
        List<(double original_price, double discounted_price)> calculated_prices = new List<(double original_price, double discounted_price)>();
        for (int i = 0; i < Model.SelectedProducts.Count; i++)
        {
            original_price += Model.SelectedProducts[i].Item1.Price * Model.SelectedProducts[i].Item2;
            discounted_price += Model.SelectedProducts[i].Item1.DiscountedPrice * Model.SelectedProducts[i].Item2;
        }

        calculated_prices.Add((original_price, discounted_price));
        return calculated_prices;
    }

    private double DiscountAmount()
    {
        return CalculateOrderDiscounts()[0].original_price - CalculateOrderDiscounts()[0].discounted_price;
    }

    private double VIPDiscount()
    {
        return CalculateOrderDiscounts()[0].discounted_price - Model.TotalOrder;
    }
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Einstein Kaffee - OrderStep 7</title>
</head>
<body>
    @Html.Partial("NavigationBar")
    <script>
        // Set the date we're counting down to
        var countDownDate = new Date(new Date().getTime() + 60000 * @Model.OrderTimeInterval);

        // Update the count down every 1 second
        var x = setInterval(function () {

            // Get today's date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Output the result in an element with id="demo"
            document.getElementById("order_timer").innerHTML = minutes + "m " + seconds + "s ";

            // If the count down is over, write some text
            if (distance < 0) {
                clearInterval(x);
                @{ TempData["OrderExpired"] = "Order expired, Please try again..."; }
                window.location.href = "@Url.Action("OrderStep1", "Home")";
            }
        }, 1000);
    </script>
    <center style="color:orangered; font-size:25px; font-weight:bold">This Order Will Expire In: <b id="order_timer"></b></center>


    <div>
        <h1 style="text-align: center;">Order Summary</h1>
        <center>
            @using (Html.BeginForm("SubmitOrderStep7", "Home", FormMethod.Post))
            {
                String transaction_id = CreateTransactionIdentifier();
                @Html.HiddenFor(m => m.CurrentDate)
                @Html.HiddenFor(m => m.Location)
                @Html.HiddenFor(m => m.Category)
                @Html.HiddenFor(m => m.TotalOrder)
                @Html.HiddenFor(m => m.OrderTimeInterval)
                TempData["AvailableMenus"] = Model.AvailableMenus;
                TempData["AvailableProducts"] = Model.AvailableProducts;
                TempData["MaxPricePerProduct"] = Model.MaxPricePerProduct;
                TempData["LoggedInUser"] = Model.LoggedInUser;
                TempData["SelectedMenu"] = Model.SelectedMenu;
                TempData["SelectedProducts"] = Model.SelectedProducts;
                TempData["AvailableSeats"] = Model.AvailableSeats;
                TempData["SelectedSeats"] = Model.SelectedSeats;
                TempData["TransactionIdentifier"] = transaction_id;
                TempData["OrderTimer"] = Model.OrderTimer;

                <table style="border-collapse: collapse; width: 300px; height: 64px;" border="1">
                    <tbody>
                        <tr>
                            <td style="width: 100%; text-align: center;"><strong><u>Order No:</u></strong> #@transaction_id</td>
                        </tr>
                        <tr>
                            <td style="width: 100%; text-align: left;">
                                <p><strong><u>Order Date:</u></strong> @Model.CurrentDate</p>
                                <p><strong><u>Full Name:</u></strong> @Model.LoggedInUser.FirstName @Model.LoggedInUser.LastName</p>
                                <p>
                                    <strong><u>Preferred Location:</u></strong>
                                    @if (Model.Location.ToString().CompareTo("ALL_SEATS") == 0)
                                    {
                                        @:All Seats
                                    }
                                    else
                                    {
                                        @Model.Location
                                    }
                                </p>
                                <p>
                                    <strong><u>Preferred Category:</u></strong>
                                    @if (Model.Category.ToString().CompareTo("ALL_CATEGORIES") == 0)
                                    {
                                        @:All Categories
                                    }
                                    else
                                    {
                                        @Model.Category
                                    }
                                </p>
                                <p><strong><u>Menu Chosen:</u></strong> @Model.SelectedMenu.Name</p>
                                <p><strong><u>Products:</u></strong></p>
                                <ul style="list-style-type: disc;">
                                    @for (int i = 0; i < Model.SelectedProducts.Count; i++)
                                    {

                                        if (Model.SelectedProducts[i].Item1.Price == 0)
                                        {
                                            double total_product_price = Model.SelectedProducts[i].Item2 * @Model.SelectedProducts[i].Item1.DiscountedPrice;
                                            <li>@Model.SelectedProducts[i].Item1.Name (@Model.SelectedProducts[i].Item2) @total_product_price ILS  <strong style="color:forestgreen">- FREE!</strong></li>
                                        }
                                        else
                                        {
                                            double total_product_price = Model.SelectedProducts[i].Item2 * @Model.SelectedProducts[i].Item1.DiscountedPrice;
                                            <li>@Model.SelectedProducts[i].Item1.Name (@Model.SelectedProducts[i].Item2) @total_product_price ILS</li>
                                        }
                                    }
                                </ul>
                                <p><strong><u>Seats:</u></strong></p>
                                <ul style="list-style-type: disc;">
                                    @for (int i = 0; i < Model.SelectedSeats.Count; i++)
                                    {
                                        <li>Row: #@{ int row = Model.SelectedSeats[i].Item1 + 1; } @row Seat: #@Model.SelectedSeats[i].Item2</li>
                                    }
                                </ul>
                                <p><strong><u>Total Order:</u></strong></p>
                                <ul style="list-style-type: disc;">
                                    @if (CalculateOrderDiscounts()[0].original_price > CalculateOrderDiscounts()[0].discounted_price)
                                    {
                                    <li style="color:gray">Intermediate Order Amount: @CalculateOrderDiscounts()[0].original_price ILS</li>
                                        <li style="color:forestgreen">Discount Amount: -@DiscountAmount() ILS</li>
                                    }
                                    else
                                    {
                                <li style="color:gray">Intermediate Amount: @CalculateOrderDiscounts()[0].original_price ILS</li>
                                        <li style="color:forestgreen">Discount: -0.0 ILS</li>
                                    }
                                    @if (Model.LoggedInUser.VIP == true)
                                    {
                                    <li style="color:forestgreen">VIP Discount: -@VIPDiscount() ILS</li>
                                    }
                                    <li style="color:orangered">Due Amount: @Model.TotalOrder ILS</li>
                                </ul>
                            </td>
                        </tr>
                    </tbody>
                </table>
                TempData["OrderData"] = Model;
                TempData["FinalOrderPrice"] = Model.TotalOrder;
                <p><input type="button" value="Go Back" onclick="location.href='@Url.Action("OrderStepBack", "Home", Model)'" /> <input type="submit" value="Confirm" /></p>
            }
            @foreach ((Products product, double discount, int prom_id) promotion in Model.Promotions)
            {
                if (promotion.prom_id == 1)
                {
                    <h3><span style="color: #339966;"><em>**<span class="VIiyi" lang="en"><span class="JLqJ4b ChMk0b" data-language-for-alternatives="en" data-language-to-translate-into="iw" data-phrase-index="0" data-number-of-phrases="1">You are eligible to a free 10th drink! <br /></span></span></em></span></h3>
                }

                if (promotion.prom_id == 2)
                {
                    <h3><span style="color: #339966;"><em>**<span class="VIiyi" lang="en"><span class="JLqJ4b ChMk0b" data-language-for-alternatives="en" data-language-to-translate-into="iw" data-phrase-index="0" data-number-of-phrases="1">You are eligible to a 10% discount on the total order!</span></span> </em></span></h3>
                }

                if (promotion.prom_id == 3)
                {
                    <h3><span style="color: #339966;"><em>**<span class="VIiyi" lang="en"><span class="JLqJ4b ChMk0b" data-language-for-alternatives="en" data-language-to-translate-into="iw" data-phrase-index="0" data-number-of-phrases="1">You are eligible to a free 10th drink! </span></span></em></span></h3>
                }
            }
        </center>
    </div>
</body>
</html>
